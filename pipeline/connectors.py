import paramiko
import os

from pipeline.exceptions import MissingCredentialsException

class Connector(object):
    def __init__(self, target, *args, **kwargs):
        self.target = target

    def connect(self, *args, **kwargs):
        '''Returns file object from target connection specified in constructor
        '''
        raise NotImplementedError

    def close(self):
        '''Closes connection and files generated by the connector.
        '''
        raise NotImplementedError

class SFTPConnector(Connector):
    def __init__(self, target, *args, **kwargs):
        super(SFTPConnector, self).__init__(target)
        self.host = kwargs.get('host', None)
        self.username = kwargs.get('username', '')
        self.password = kwargs.get('password', '')
        self.port = kwargs.get('port', 22)
        self.dir = kwargs.get('dir','')
        self.conn = None

        self.transport = paramiko.Transport((self.host, self.port))

    def connect(self, *args, **kwargs):
        if kwargs.get('username'):
            self.username = kwargs.get('username')
        if kwargs.get('password'):
            self.password = kwargs.get('password')

        if self.username is None:
            raise MissingCredentialsException('Username missing.')
        if self.password is None:
            raise MissingCredentialsException('Password missing.')

        self.transport.connect(username=self.username,
                               password=self.password)

        self.conn = paramiko.SFTPClient.from_transport(self.transport)

        target = os.path.join(self.dir, self.target)
        self.fp = self.conn.file(target, 'r')

        return self.fp

    def close(self):
        self.fp.close()
        self.conn.close()

class FileConnector(Connector):
    def __init__(self, target):
        super(FileConnector, self).__init__(target)

    def connect(self):
        try:
            self.fp = open(self.target)
        except IOError as e:
            raise e
        return self.fp

    def close(self):
        self.fp.close()
